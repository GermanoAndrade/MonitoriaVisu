1:10
5:10
dmasodkaopskdas
help()
love
happiness
peace
kill
kill()
x= mtcars
x["mpg"]
histogram(x["mpg"])
hist(x["mpg"])
hist(x)
x
x["mpg"]
hist(x["mpg"])
x = mtcars
hist(x$mpg)
stem(x$mpg)
stem(x$mpg, scale=2)
stem(x$mpg, scale=5)
stem(x$mpg, scale=3)
stem(x$mpg, scale=2)
stem(x$mpg, scale=3)
stem(x$mpg, scale=1)
stem(x$mpg, scale=1)
stem(x$mpg, scale=2)
stem(x$mpg, scale=3)
stem(x$mpg, scale=0)
stem(x$mpg, scale=-1)
stem(x$mpg, scale=0.5)
stem(x$mpg, scale=0.1)
stem(x$mpg, scale=0.001)
stem(x$mpg, scale=0.001)
stem(x$mpg, scale=0.01)
stem(x$mpg, scale=0.1)
sort
sort(x$mpg)
len(x$mpg)
length(x$mpg)
sort(x$mpg)[16]
(sort(x$mpg)[16]+sort(x$mpg)[17])/2
useMethod("median")
kill
boxplot(x$mpg)
fashion
style
vogue
mode
wear
library(dict)
installpackage(dict)
installpackage("dict")
2.13 + 2.56
1.123.123 + 1.123.123
x = vector()
names(x) <- "cu"
x[1] = 5
names(x) <-"cu"
x["cu"]
y = x["cu"]
y
x[5]
x[1]
x[1][0]
y = x[1][0]
y
x[["cu"]]
names(x) <- 5
x[[5]]
x[["5"]]
x
x[5]
x["5"]
x[["5"]]
moda <- function(vetor){
maiorContagem = 0
valorMaximo = 0
for(i in 1:(length(vetor))){
contagemAtual = 1
for(j in 1:(length(vetor))){
if(i!=j){
if(vetor[i]==vetor[j]){
contagemAtual = contagemAtual + 1
}
}
}
if(contagemAtual>maiorContagem){
valorMaximo = vetor[i]
maiorContagem = contagemAtual
}
}
}
moda(c(1,1,2,3,4,5,2,2))
moda <- function(vetor){
maiorContagem = 0
valorMaximo = 0
for(i in 1:(length(vetor))){
contagemAtual = 1
for(j in 1:(length(vetor))){
if(i!=j){
if(vetor[i]==vetor[j]){
contagemAtual = contagemAtual + 1
}
}
}
if(contagemAtual>maiorContagem){
valorMaximo = vetor[i]
maiorContagem = contagemAtual
}
}
return(valorMaximo)
}
moda(c(1,1,2,3,4,5,2,2))
moda <- function(vetor){
maiorContagem = 0
valorMaximo = 0
for(i in 1:(length(vetor))){
contagemAtual = 1
for(j in 1:(length(vetor))){
if(i!=j){
if(vetor[i]==vetor[j]){
contagemAtual = contagemAtual + 1
}
}
}
if(contagemAtual>maiorContagem){
valorMaximo = vetor[i]
maiorContagem = contagemAtual
}
}
return(valorMaximo)
}
moda(c(1,1,2,3,4,5,2,2,1,1))
moda <- function(vetor){
maiorContagem = 0
valorMaximo = 0
for(i in 1:(length(vetor))){
contagemAtual = 1
for(j in 1:(length(vetor))){
if(i!=j){
if(vetor[i]==vetor[j]){
contagemAtual = contagemAtual + 1
}
}
}
if(contagemAtual>maiorContagem){
valorMaximo = vetor[i]
maiorContagem = contagemAtual
}
}
return(valorMaximo)
}
moda(c(1,1,2,3,4,5,2,2,1,1))
getwd()
housing <- read_csv("dataSets/landdata-states.csv")
library(ggplot2)
housing <- read_csv("dataSets/landdata-states.csv")
housing <- read.csv("dataSets/landdata-states.csv")
hist(housing$Home.Value)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
View(housing)
View(housing)
?factor
factor(houseing$State)
factor(housing$State)
houseing$State
housing$State
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
plot(Home.Value ~ Date,
col = factor(housing$State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
#legend("topleft",
#       legend = c("MA", "TX"),
#       col = c("black", "red"),
#       pch = 1)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
#legend("topleft",
#       legend = c("MA", "TX"),
#       col = c("black", "red"),
#       pch = 1)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, this.State %in% c("MA", "TX")))
#legend("topleft",
#       legend = c("MA", "TX"),
#       col = c("black", "red"),
#       pch = 1)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
?filter
filter(housing, State %in% c("MA","TX"))
filter(housing, housing$State %in% c("MA","TX"))
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, housing$State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
plot(Home.Value ~ Date,
col = factor(housing$State),
data = filter(housing, housing$State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
library(ggplot2)
ggplot(housing, aes(x = Home.Value)) +
geom_histogram()
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
?legend
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
filter(housing, State %in% c("MA", "TX"))
filter(housing, factor(State) %in% c("MA", "TX"))
filter(housing, State %in% c("MA", "TX"))
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, housing$State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
plot(Home.Value ~ Date,
col = factor(State),
data = filter(housing, housing$State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
ggplot(filter(housing, State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
ggplot(filter(housing, State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
ggplot(filter(housing, housing$State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
ggplot(housing $>$ filter(State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
ggplot(housing %>% filter(State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
housing %>% filter(State %in% c("MA", "TX"))
ggplot(dplyr::filter(housing, State %in% c("MA", "TX")),
aes(x=Date,
y=Home.Value,
color=State))+
geom_point()
plot(Home.Value ~ Date,
col = factor(State),
data = dplyr::filter(housing, State %in% c("MA", "TX")))
legend("topleft",
legend = c("MA", "TX"),
col = c("black", "red"),
pch = 1)
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
theme(legend.position="top",
axis.text=element_text(size = 6))
(p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0.25, height = 0)))
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
theme(legend.position="top",
axis.text=element_text(size = 6))
(p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0, height = 0)))
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
theme(legend.position="top",
axis.text=element_text(size = 6))
(p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0.3, height = 0)))
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
theme(legend.position="top",
axis.text=element_text(size = 6))
(p4 <- p3 + geom_point(aes(color = Date),
alpha = 1,
size = 1,
position = position_jitter(width = 0.3, height = 0)))
.5
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
theme(legend.position="top",
axis.text=element_text(size = 6))
(p4 <- p3 + geom_point(aes(color = Date),
alpha = 1,
size = 1.5,
position = position_jitter(width = 0.3, height = 0)))
p3 <- ggplot(housing,
aes(x = State,
y = Home.Price.Index)) +
theme(legend.position="top",
axis.text=element_text(size = 6))
(p4 <- p3 + geom_point(aes(color = Date),
alpha = 0.5,
size = 1.5,
position = position_jitter(width = 0.3, height = 0)))
runif(10,50,100)
vector()
x = vector()
x[1] = 5
x
x[2] = 5
x
install.packages(rmarkdown)
library(rmarkdown)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
knitr::opts_chunk$set(echo = TRUE)
getwd(0)
getwd()
setwd("C:/Users/tomas/OneDrive - Fundacao Getulio Vargas - FGV/FGV/2020.1/Monitoria/MonitoriaVisu/Códigos em R/Conjunto de Dados")
read.csv
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
x <- read.csv("TabelaAula.csv")
summary(cars)
setwd("C:/Users/tomas/OneDrive - Fundacao Getulio Vargas - FGV/FGV/2020.1/Monitoria/MonitoriaVisu/Códigos em R/Conjunto de Dados")
x <- read.csv("TabelaAula.csv")
summary(cars)
setwd("C:/Users/tomas/OneDrive - Fundacao Getulio Vargas - FGV/FGV/2020.1/Monitoria/MonitoriaVisu/Códigos em R/Conjunto de Dados")
x <- read.csv("TabelaAula.csv")
plot(x$hugAntesEscovação)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/tomas/OneDrive - Fundacao Getulio Vargas - FGV/FGV/2020.1/Monitoria/MonitoriaVisu/Códigos em R/Conjunto de Dados")
summary(cars)
x <- read.csv("TabelaAula.csv")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = "C:/Users/tomas/OneDrive - Fundacao Getulio Vargas - FGV/FGV/2020.1/Monitoria/MonitoriaVisu/Códigos em R/Conjunto de Dados")
summary(cars)
x <- read.csv("TabelaAula.csv")
summary(cars)
plot(x$hugAntesEscovação)
